void main()
{
	// Max Number for Global Flags hotkey
	SetGlobalFlag(GCensorMaxNum , 5);
	SetGlobalFlag(GEffectExtendMaxNum , 0);
	SetGlobalFlag(GAltBGMflowMaxNum , 1);
	SetGlobalFlag(GAltSEflowMaxNum , 1);

	// restore default ADV-MODE setting
	if(GetGlobalFlag(GMOD_SETTING_LOADER) == 0) {
		SetGlobalFlag(GVoiceVolume , 75);
		SetGlobalFlag(GSEVolume , 50);
		SetGlobalFlag(GBGMVolume , 50);
		SetGlobalFlag(GADVMode , 1);
		SetGlobalFlag(GLipSync , 1);
		SetGlobalFlag(GEffectExtend , 0);
		SetGlobalFlag(GAltBGM , 0);
		SetGlobalFlag(GAltSE , 0);
		SetGlobalFlag(GAltVoice , 0);
		SetGlobalFlag(GCensor , 2);
		SetGlobalFlag(GAltBGMflow , 0);
		SetGlobalFlag(GAltSEflow , 0);
		SetGlobalFlag(GAltVoicePriority , 0);
		SetGlobalFlag(GWindowOpacity , 50);
		SetGlobalFlag(GHideButtons , 0);
		SetGlobalFlag(GArtStyle , 0);
		SetGlobalFlag(GMOD_SETTING_LOADER , 3);
	}

	// restore default NVL-MODE setting
	if(GetGlobalFlag(GMOD_SETTING_LOADER) == 1) {
		SetGlobalFlag(GVoiceVolume , 75);
		SetGlobalFlag(GSEVolume , 50);
		SetGlobalFlag(GBGMVolume , 50);
		SetGlobalFlag(GADVMode , 0);
		SetGlobalFlag(GLipSync , 0);
		SetGlobalFlag(GEffectExtend , 0);
		SetGlobalFlag(GAltBGM , 0);
		SetGlobalFlag(GAltSE , 0);
		SetGlobalFlag(GAltVoice , 0);
		SetGlobalFlag(GCensor , 2);
		SetGlobalFlag(GAltBGMflow , 0);
		SetGlobalFlag(GAltSEflow , 0);
		SetGlobalFlag(GAltVoicePriority , 0);
		SetGlobalFlag(GWindowOpacity , 50);
		SetGlobalFlag(GHideButtons , 0);
		SetGlobalFlag(GArtStyle , 0);
		SetGlobalFlag(GMOD_SETTING_LOADER , 3);
	}

	// restore vanilla GFlag settings
	if(GetGlobalFlag(GMOD_SETTING_LOADER) == 2) {
		SetGlobalFlag(GVoiceVolume , 75);
		SetGlobalFlag(GSEVolume , 50);
		SetGlobalFlag(GBGMVolume , 50);
		SetGlobalFlag(GADVMode , 0);
		SetGlobalFlag(GLipSync , 0);
		SetGlobalFlag(GEffectExtend , 0);
		SetGlobalFlag(GAltBGM , 0);
		SetGlobalFlag(GAltSE , 0);
		SetGlobalFlag(GAltVoice , 0);
		SetGlobalFlag(GCensor , 0);
		SetGlobalFlag(GAltBGMflow , 0);
		SetGlobalFlag(GAltSEflow , 0);
		SetGlobalFlag(GAltVoicePriority , 0);
		SetGlobalFlag(GWindowOpacity , 50);
		SetGlobalFlag(GHideButtons , 0);
		SetGlobalFlag(GMOD_SETTING_LOADER , 0);
		SetGlobalFlag(GCensorMaxNum , 0);
		SetGlobalFlag(GEffectExtendMaxNum , 0);
		SetGlobalFlag(GAltBGMflowMaxNum , 0);
		SetGlobalFlag(GAltSEflowMaxNum , 0);
		SetGlobalFlag(GArtStyle , 1);
	}

	// Some values have been adjusted in Rei for new font/font renderer
	// and also to prevent text overflow. With the new font you can fit
	// four lines of text (normally only 3 are ever used though)
	ModADVModeSettingLoad(
		"<size=+6>{0}\n</size>", //NameFormat
		-170, //WindowPosX
		-300, //WindowPosY
		1150, //WindowSizeX
		250, //WindowSizeY
		60, //WindowMarginLeft
		15, //WindowMarginTop - Rei: Adjust to 15 (was 30)
		50, //WindowMarginRight
		30, //WindowMarginBottom
		1, //FontID
		0, //CharSpacing
		3, //LineSpacing - Rei: Adjust to 0 (was 8)
		34 //FontSize
	);

	ModNVLModeSettingLoad(
		"", //NameFormat
		-170, //WindowPosX
		-10, //WindowPosY
		1150, //WindowSizeX
		720, //WindowSizeY
		60, //WindowMarginLeft
		30, //WindowMarginTop
		50, //WindowMarginRight
		30, //WindowMarginBottom
		1, //FontID
		0, //CharSpacing
		0, //LineSpacing - Rei: Adjust to 0 (was 8)
		32 //FontSize
	);

	ModNVLADVModeSettingLoad(
		"", //NameFormat
		-170, //WindowPosX
		-10, //WindowPosY
		1150, //WindowSizeX
		720, //WindowSizeY
		60, //WindowMarginLeft
		30, //WindowMarginTop
		50, //WindowMarginRight
		30, //WindowMarginBottom
		1, //FontID
		0, //CharSpacing
		3, //LineSpacing - Rei: Adjust to 0 (was 8)
		34 //FontSize
	);

	ModRyukishiModeSettingLoad(
		"", //NameFormat
		0, //WindowPosX
		0, //WindowPosY
		1024, //WindowSizeX
		720, //WindowSizeY
		60, //WindowMarginLeft
		30, //WindowMarginTop
		50, //WindowMarginRight
		30, //WindowMarginBottom
		1, //FontID
		0, //CharSpacing
		0, //LineSpacing - Rei: Adjust to 0 (was 8)
		32 //FontSize
	);


	// For Hou+, you can also specify the window fade in and out time
	SetWindowFadeTime(200); // 0.2s
	SetWindowFadeOutTime(500); // 0.5s

	SetScreenAspect("0.5625");
	SetGUIPosition(170, 0);
	ModSetConfigFontSize(15);
	ModGenericCall("FaceDilate", "26");

	ModSetMainFontOutlineWidth(20);

	ModAddArtset("Console", "ゲーム機", "CG");
	ModAddArtset("Remake", "リメーク", "CGAlt:CG");
//	ModAddArtset("Original", "オリジナル", "OGBackgrounds:OGSprites:CG");

	// GAltBGM controls which of these are selected
	ModAddBGMset("New BGM", "Placeholder", "BGM");
	ModAddSEset("GIN's SE", "Placeholder", "OGSE:SE");

	// Audio presets the user can select, consisting of a combination of the BGM and SE flags
	ModAddAudioset(
		"봉+ BGM/효과음",
		"봉+판 BGM/효과음 (모드 적용 전)을 사용합니다.

		다른 챕터들과 달리, 스팀판 버전 봉+(2023)에 포함된 BGM/SE는 기존 동인판 봉+(2022)와 동일한 BGM/SE를 사용합니다.

		이는 스팀판 해답편과 스팀판 봉+판 BGM이 일관되지 않다는 것을 의미합니다.

		따라서, 이 옵션을 사용하면, 일부 스팀판 해답편에서 나온 일부 BGM이 스팀판 봉+에서 다르게 들릴 수 있는 이유입니다. 현재, 이를 수정할 수 있는 BGM 설정이 없습니다.

		07th-Mod 위키에서 자세한 내용을 확인하세요.",
		"JP: Hou+ BGM/SE",
		"JP: Use the Hou+ compilation BGM/SE (that comes with the unmodded game), played with the Console timings.

		Unlike the other chapters, the BGM/SE that came with the MangaGamer version of Higurashi Hou+ (2023) has not been altered (it is the same as the original Hou+ (2022) release).

		This means that even between Mangagamer's Question Arcs (known as 'New BGM' in our mod) and MangaGamer's Hou+ release (this option), the BGM is inconsistent.

		This is the reason why some BGM may sound different between the Question Arcs (using the 'New BGM' option) and Hou+ (using this option). Currently we don't have a BGM option to fix this.

		Please click on the 'Open BGM/SE FAQ' button to view the 07th-mod wiki for more details.",
		0, // GAltBGM
		0, // GAltBGMFlow
		0, // GAltSE
		0  // GAltSEFlow
	);

	ModAddAudioset(
		"동인판 BGM/SE",
		"이 옵션은 대체 파일이 존재하는 경우 BGM과 효과음을 동인판 봉+ (2015)와 동일하게 복원합니다.

		동인판 BGM/SE를 사용했다면, 이 옵션을 선택하는 것을 추천합니다.

		주의 1: BGM 또는 효과음이 스팀판 봉+에만 존재하는 경우, 스팀판 버전이 사용됩니다.

		주의 2: BGM과 효과음만 교체됩니다. 따라서, BGM과 효과음 재생 타이밍이 다른지는 확인되지 않았습니다.

		07th-Mod 위키에서 자세한 내용을 확인하세요.

		Credits: Hou BGM/SE files provided by Overg",
		"JP: GIN's BGM/SE",
		"JP: This option restores the BGM/SE files to the same as the Hou compilation (2014), if a replacement exists.

		If you were previously using GIN's BGM/SE, you should pick this option.

		Note 1: If a BGM or SE only exists in Hou+ (2023), the Hou+ version will be used.

		Note 2: This is purely a file replacement - no attempt has been made to check if the timings are different(when BGM/SE starts/stops playing).

		Please click on the 'Open BGM/SE FAQ' button to view the 07th-mod wiki for more details.

		Credits: Hou BGM/SE files provided by Overg",
		1, // GAltBGM
		1, // GAltBGMFlow
		1, // GAltSE
		1  // GAltSEFlow
	);

	ModGenericCall("LipSyncSettings", ".3, .7, true");
	SetNameHistoryFormat("{0}\n");//history seems to have broken nametags without it

	CallScript( "flow" );
}
